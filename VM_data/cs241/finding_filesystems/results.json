[
  {
    "revision": "87951",
    "checksum": "a8602b7c1f0b00f9664eac192a46464b18abfe97  minixfs.c\n",
    "timestamp": "2018-04-13 22:00:02.653210",
    "testcases": [
      {
        "ptsEarned": 0.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ]
  },
  {
    "revision": "88279",
    "checksum": "a8602b7c1f0b00f9664eac192a46464b18abfe97  minixfs.c\n",
    "timestamp": "2018-04-14 22:00:02.692191",
    "testcases": [
      {
        "ptsEarned": 0.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ]
  },
  {
    "revision": "88952",
    "checksum": "38530dcde504c99bb329644edcf794cbc0b07352  minixfs.c\n",
    "timestamp": "2018-04-15 22:00:02.738400",
    "testcases": [
      {
        "ptsEarned": 1.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ]
  },
  {
    "revision": "90496",
    "checksum": "38530dcde504c99bb329644edcf794cbc0b07352  minixfs.c\n",
    "timestamp": "2018-04-16 22:00:02.652657",
    "testcases": [
      {
        "ptsEarned": 1.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ]
  },
  {
    "revision": "91415",
    "checksum": "7a30c6b46cae490ead46188191c4bfdb78f2d76d  minixfs.c\n",
    "timestamp": "2018-04-17 22:00:02.772315",
    "testcases": [
      {
        "ptsEarned": 1.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ]
  },
  {
    "revision": "91875",
    "checksum": "634e5b237e1d042e055f67928acaff87b43b8825  minixfs.c\n",
    "timestamp": "2018-04-18 12:00:02.807526",
    "testcases": [
      {
        "ptsEarned": 1.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 0.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ]
  },
  {
    "checksum": "a3d2a4a497d41de22cae1161df6dd30c7977a682  minixfs.c\n",
    "revision": "92731",
    "testcases": [
      {
        "ptsEarned": 1.0,
        "name": "chmod_test",
        "description": "Testing chmod",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "chown_test",
        "description": "Testing chown",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block",
        "description": "Testing that minixfs_read can read 1 block",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_length",
        "description": "Test that minixfs_read can read 1 block with different lengths of bytes",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_1_block_offset",
        "description": "Test that minixfs_read can handle offsets correctly",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_direct_blocks",
        "description": "Test that all direct blocks can be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_block_with_offset",
        "description": "Check all indirect blocks can be read with specified offsets",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "read_indirect_blocks",
        "description": "Check that all indirect blocks can also be read",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "write_direct_blocks_with_offset",
        "description": "Check that direct blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "write_errs",
        "description": "Check that errno is set correctly on failure",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "write_indirect_blocks_with_offset",
        "description": "Check that indirect blocks can be written to",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      },
      {
        "ptsEarned": 1.0,
        "name": "writeNewFile",
        "description": "Attempt to write to a non-existant file successfully",
        "ptsPossible": 1.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nTrying to compile your code...\nSuccessfully compiled your code."
      }
    ],
    "timestamp": "2018-04-19 00:00:02.791537"
  }
]